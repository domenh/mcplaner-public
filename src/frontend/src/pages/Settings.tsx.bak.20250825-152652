import { useEffect, useState } from "react";

/**
 * McPlaner 2.0 — Settings
 * - Samostojen, brez zunanjih Page/Tab komponent (da se varno skompajla)
 * - Notranji "tabs": Splošno, Skupine, Postaje, Želje, Notifikacije
 * - className pogoje vedno zapišemo z { "..." + (pogoj ? "a" : "b") }
 */

type Tab = "general" | "groups" | "stations" | "wishes" | "notifications";

function cx(...parts: Array<string | false | null | undefined>) {
  return parts.filter(Boolean).join(" ");
}

export default function Settings() {
  const [tab, setTab] = useState<Tab>("general");

  useEffect(() => {
    document.title = "McPlaner — Nastavitve";
  }, []);

  return (
    <div className="p-6">
      <h1 className="text-2xl font-semibold mb-4">Nastavitve</h1>

      {/* TAB GUMBI */}
      <div className="mb-4 flex items-center gap-2 flex-wrap">
        {[
          { k: "general", label: "Splošno" },
          { k: "groups", label: "Skupine" },
          { k: "stations", label: "Postaje" },
          { k: "wishes", label: "Omejitve želja" },
          { k: "notifications", label: "Notifikacije" },
        ].map((b) => (
          <button
            key={b.k}
            onClick={() => setTab(b.k as Tab)}
            className={cx(
              "rounded-xl px-3 py-2 border transition",
              tab === (b.k as Tab)
                ? "bg-slate-900 text-white border-slate-900"
                : "bg-white hover:bg-slate-50"
            )}
          >
            {b.label}
          </button>
        ))}
      </div>

      {/* VSEBINA TABA */}
      <div className="rounded-xl border bg-white p-4">
        {tab === "general" && <GeneralTab />}
        {tab === "groups" && <GroupsTab />}
        {tab === "stations" && <StationsTab />}
        {tab === "wishes" && <WishesTab />}
        {tab === "notifications" && <NotificationsTab />}
      </div>
    </div>
  );
}

/* ======================= POSAMEZNI TABS (minimalno, varno) ======================= */

function SectionTitle({ children }: { children: string }) {
  return <h2 className="text-lg font-semibold mb-3">{children}</h2>;
}

function Row({ children }: { children: React.ReactNode }) {
  return <div className="flex flex-col md:flex-row md:items-center gap-2 py-2">{children}</div>;
}

function Label({ htmlFor, children }: { htmlFor: string; children: string }) {
  return (
    <label htmlFor={htmlFor} className="w-56 text-sm text-slate-600">
      {children}
    </label>
  );
}

function Input(props: React.InputHTMLAttributes<HTMLInputElement>) {
  return (
    <input
      {...props}
      className={cx(
        "border rounded-lg px-3 py-2 w-full md:w-60",
        (props.className as string) || ""
      )}
    />
  );
}

function Select(props: React.SelectHTMLAttributes<HTMLSelectElement>) {
  return (
    <select
      {...props}
      className={cx(
        "border rounded-lg px-3 py-2 w-full md:w-60 bg-white",
        (props.className as string) || ""
      )}
    />
  );
}

/* --- SPLOŠNO ---------------------------------------------------- */
function GeneralTab() {
  return (
    <div>
      <SectionTitle>Splošne nastavitve</SectionTitle>
      <Row>
        <Label htmlFor="lang">Jezik</Label>
        <Select id="lang" defaultValue="sl">
          <option value="sl">Slovenščina</option>
          <option value="en">English</option>
        </Select>
      </Row>
      <Row>
        <Label htmlFor="theme">Videz</Label>
        <Select id="theme" defaultValue="light">
          <option value="light">Light</option>
          <option value="dark">Dark</option>
        </Select>
      </Row>
      <Row>
        <Label htmlFor="logo">Logotip (URL)</Label>
        <Input id="logo" placeholder="https://..." />
      </Row>
    </div>
  );
}

/* --- SKUPINE ---------------------------------------------------- */
function GroupsTab() {
  // Lahka lokalna “maketa” (brez API): seznam + dodajanje
  const [groups, setGroups] = useState<string[]>([
    "Manager",
    "Assistant",
    "Trainer",
    "Crew",
  ]);
  const [val, setVal] = useState("");

  function add() {
    const v = val.trim();
    if (!v) return;
    if (groups.includes(v)) return;
    setGroups((g) => [...g, v]);
    setVal("");
  }

  function remove(name: string) {
    setGroups((g) => g.filter((x) => x !== name));
  }

  return (
    <div>
      <SectionTitle>Skupine &amp; pravice</SectionTitle>
      <Row>
        <Label htmlFor="newGroup">Dodaj skupino</Label>
        <div className="flex gap-2">
          <Input
            id="newGroup"
            value={val}
            onChange={(e) => setVal(e.target.value)}
            placeholder="npr. Delivery"
          />
          <button
            onClick={add}
            className="px-3 py-2 rounded-lg border bg-white hover:bg-slate-50"
          >
            Dodaj
          </button>
        </div>
      </Row>

      <div className="mt-4">
        <ul className="space-y-2">
          {groups.map((g) => (
            <li
              key={g}
              className="flex items-center justify-between border rounded-lg px-3 py-2"
            >
              <span>{g}</span>
              <button
                onClick={() => remove(g)}
                className="text-sm px-2 py-1 border rounded-lg hover:bg-slate-50"
              >
                Odstrani
              </button>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

/* --- POSTAJE ---------------------------------------------------- */
function StationsTab() {
  const [stations, setStations] = useState<string[]>([
    "Front",
    "Drive",
    "Kitchen",
    "Lobby",
    "Delivery",
    "Kiosk",
  ]);
  const [val, setVal] = useState("");

  function add() {
    const v = val.trim();
    if (!v) return;
    if (stations.includes(v)) return;
    setStations((s) => [...s, v]);
    setVal("");
  }

  function remove(name: string) {
    setStations((s) => s.filter((x) => x !== name));
  }

  return (
    <div>
      <SectionTitle>Postaje</SectionTitle>
      <Row>
        <Label htmlFor="newStation">Dodaj postajo</Label>
        <div className="flex gap-2">
          <Input
            id="newStation"
            value={val}
            onChange={(e) => setVal(e.target.value)}
            placeholder="npr. Grill"
          />
          <button
            onClick={add}
            className="px-3 py-2 rounded-lg border bg-white hover:bg-slate-50"
          >
            Dodaj
          </button>
        </div>
      </Row>

      <div className="mt-4 grid gap-2 md:grid-cols-2">
        {stations.map((s) => (
          <div key={s} className="border rounded-lg px-3 py-2 flex items-center justify-between">
            <span>{s}</span>
            <button
              onClick={() => remove(s)}
              className="text-sm px-2 py-1 border rounded-lg hover:bg-slate-50"
            >
              Odstrani
            </button>
          </div>
        ))}
      </div>
    </div>
  );
}

/* --- OMEJITVE ŽELJA -------------------------------------------- */
function WishesTab() {
  return (
    <div>
      <SectionTitle>Omejitve želja</SectionTitle>
      <Row>
        <Label htmlFor="deadline">Deadline (dan v mesecu)</Label>
        <Input id="deadline" type="number" min={1} max={28} defaultValue={20} />
      </Row>
      <Row>
        <Label htmlFor="maxD">Max D/leto</Label>
        <Input id="maxD" type="number" min={0} defaultValue={25} />
      </Row>
      <Row>
        <Label htmlFor="maxX">Max X/mesec</Label>
        <Input id="maxX" type="number" min={0} defaultValue={2} />
      </Row>
    </div>
  );
}

/* --- NOTIFIKACIJE ---------------------------------------------- */
function NotificationsTab() {
  return (
    <div>
      <SectionTitle>Notifikacije</SectionTitle>
      <Row>
        <Label htmlFor="channel">Kanal</Label>
        <Select id="channel" defaultValue="app">
          <option value="app">In-app</option>
          <option value="push">Push</option>
          <option value="sms">SMS</option>
          <option value="email">Email</option>
        </Select>
      </Row>
      <Row>
        <Label htmlFor="critical">Kritične objave ob loginu</Label>
        <Select id="critical" defaultValue="on">
          <option value="on">Vključeno</option>
          <option value="off">Izključeno</option>
        </Select>
      </Row>
    </div>
  );
}