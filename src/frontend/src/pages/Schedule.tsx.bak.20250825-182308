import { useEffect, useMemo, useState } from "react";

/**
 * McPlaner 2.0 — Urnik (Safe Baseline)
 * - Ta datoteka je samostojna in ne uporablja zunanjih hookov (useEmployees, ipd.),
 *   da se build 100% uspešno izvede.
 * - Bere obstoječe podatke iz localStorage (če obstajajo) ali uporablja minimalni seed.
 * - Enostavna tedenska mreža (pon-ned) za prikaz imen in “—” v celicah (pripravljeno za nadgradnjo).
 */

type Employee = {
  id: string;
  name: string;
  group?: string;
  active?: boolean;
};

type Station = {
  id: string;
  name: string;
  active?: boolean;
};

const LS_KEYS = {
  employees: ["mc_employees", "employees", "mcplaner_employees"],
  stations: ["mc_stations", "stations", "mcplaner_stations"],
};

function readFirst<T>(keys: string[], fallback: T): T {
  for (const k of keys) {
    try {
      const raw = localStorage.getItem(k);
      if (raw) return JSON.parse(raw) as T;
    } catch { /* ignore */ }
  }
  return fallback;
}

function seedEmployees(): Employee[] {
  return [
    { id: "e1", name: "Ana", group: "Crew", active: true },
    { id: "e2", name: "Boris", group: "Crew", active: true },
    { id: "e3", name: "Cvetka", group: "Trainer", active: true },
    { id: "e4", name: "Domen", group: "Manager", active: true },
  ];
}

function seedStations(): Station[] {
  return [
    { id: "s1", name: "Front", active: true },
    { id: "s2", name: "Drive", active: true },
    { id: "s3", name: "Kitchen", active: true },
    { id: "s4", name: "Lobby", active: true },
  ];
}

const DAYS = ["Pon", "Tor", "Sre", "Čet", "Pet", "Sob", "Ned"] as const;

export default function Schedule() {
  // === PODATKI ===
  const employeesAll = readFirst<Employee[]>(
    LS_KEYS.employees,
    seedEmployees()
  );
  const employees = useMemo(
    () => employeesAll.filter((e) => e && e.active !== false),
    [employeesAll]
  );

  const stationsAll = readFirst<Station[]>(
    LS_KEYS.stations,
    seedStations()
  );
  const stations = useMemo(
    () => stationsAll.filter((s) => s && s.active !== false),
    [stationsAll]
  );

  // Placeholder local state za kasnejšo nadgradnjo (IN/OUT ure, postaje, itd.)
  const [_dataVersion] = useState(1);

  useEffect(() => {
    document.title = "McPlaner — Urnik";
  }, []);

  return (
    <div className="p-6">
      <h1 className="text-2xl font-semibold mb-4">Urnik</h1>

      {/* POVZETEK */}
      <div className="mb-4 text-sm text-slate-600">
        Aktivni zaposleni: <b>{employees.length}</b> • Aktivne postaje:{" "}
        <b>{stations.length}</b>
      </div>

      {/* GRID: imena x dnevi (pon-ned) */}
      <div className="overflow-auto rounded-xl border bg-white">
        <table className="min-w-[720px] w-full">
          <thead className="bg-slate-50">
            <tr>
              <th className="text-left px-3 py-2 w-56">Zaposleni</th>
              {DAYS.map((d) => (
                <th key={d} className="text-center px-3 py-2">{d}</th>
              ))}
            </tr>
          </thead>
          <tbody>
            {employees.map((e) => (
              <tr key={e.id} className="border-t">
                <td className="px-3 py-2">
                  <div className="font-medium">{e.name}</div>
                  <div className="text-xs text-slate-500">{e.group ?? "—"}</div>
                </td>
                {DAYS.map((d) => (
                  <td key={d} className="px-2 py-2">
                    <div className="border rounded-lg px-2 py-3 text-center text-slate-500 select-none">
                      —
                    </div>
                  </td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <p className="text-xs text-slate-500 mt-3">
        * Ta “baseline” različica je pripravljena za nadgradnjo (IN/OUT ure, dodelitev postaj,
        zapisi v localStorage ali API). Namen je stabilen build brez TS/JS napak.
      </p>
    </div>
  );
}